(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@angular/core", "../button/button.ngfactory", "../button/button", "../../config/config", "@angular/forms", "./toggle", "../../util/form", "../../platform/platform", "../../tap-click/haptic", "../item/item", "../../gestures/gesture-controller", "../../platform/dom-controller"], factory);
    }
})(function (require, exports) {
    "use strict";
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */ 
    Object.defineProperty(exports, "__esModule", { value: true });
    var i0 = require("@angular/core");
    var i1 = require("../button/button.ngfactory");
    var i2 = require("../button/button");
    var i3 = require("../../config/config");
    var i4 = require("@angular/forms");
    var i5 = require("./toggle");
    var i6 = require("../../util/form");
    var i7 = require("../../platform/platform");
    var i8 = require("../../tap-click/haptic");
    var i9 = require("../item/item");
    var i10 = require("../../gestures/gesture-controller");
    var i11 = require("../../platform/dom-controller");
    var styles_Toggle = [];
    var RenderType_Toggle = i0.ɵcrt({ encapsulation: 2, styles: styles_Toggle, data: {} });
    exports.RenderType_Toggle = RenderType_Toggle;
    function View_Toggle_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["class", "toggle-icon"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, "div", [["class", "toggle-inner"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, "button", [["class", "item-cover"], ["disable-activated", ""], ["ion-button", "item-cover"], ["role", "checkbox"], ["type", "button"]], [[8, "id", 0], [1, "aria-checked", 0], [1, "aria-labelledby", 0], [1, "aria-disabled", 0]], null, null, i1.View_Button_0, i1.RenderType_Button)), i0.ɵdid(3, 1097728, null, 0, i2.Button, [[8, "item-cover"], i3.Config, i0.ElementRef, i0.Renderer], null, null)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.id; var currVal_1 = _co._value; var currVal_2 = _co._labelId; var currVal_3 = _co._disabled; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }
    exports.View_Toggle_0 = View_Toggle_0;
    function View_Toggle_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "ion-toggle", [], [[2, "toggle-disabled", null], [2, "toggle-checked", null], [2, "toggle-activated", null]], [[null, "keyup"]], function (_v, en, $event) { var ad = true; if (("keyup" === en)) {
            var pd_0 = (i0.ɵnov(_v, 2)._keyup($event) !== false);
            ad = (pd_0 && ad);
        } return ad; }, View_Toggle_0, RenderType_Toggle)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.Toggle]), i0.ɵdid(2, 1228800, null, 0, i5.Toggle, [i6.Form, i3.Config, i7.Platform, i0.ElementRef, i0.Renderer, i8.Haptic, [2, i9.Item], i10.GestureController, i11.DomController, i0.NgZone], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2)._disabled; var currVal_1 = i0.ɵnov(_v, 2)._value; var currVal_2 = i0.ɵnov(_v, 2)._activated; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }
    exports.View_Toggle_Host_0 = View_Toggle_Host_0;
    var ToggleNgFactory = i0.ɵccf("ion-toggle", i5.Toggle, View_Toggle_Host_0, { color: "color", mode: "mode", disabled: "disabled", checked: "checked" }, { ionFocus: "ionFocus", ionChange: "ionChange", ionBlur: "ionBlur" }, []);
    exports.ToggleNgFactory = ToggleNgFactory;
});
//# sourceMappingURL=toggle.ngfactory.js.map