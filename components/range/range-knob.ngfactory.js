/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./range-knob";
var styles_RangeKnob = [];
var RenderType_RangeKnob = i0.ɵcrt({ encapsulation: 2, styles: styles_RangeKnob, data: {} });
export { RenderType_RangeKnob as RenderType_RangeKnob };
function View_RangeKnob_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["class", "range-pin"], ["role", "presentation"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.val; _ck(_v, 1, 0, currVal_0); }); }
export function View_RangeKnob_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_RangeKnob_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 0, "div", [["class", "range-knob"], ["role", "presentation"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.pin; _ck(_v, 1, 0, currVal_0); }, null); }
export function View_RangeKnob_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["class", "range-knob-handle"], ["role", "slider"]], [[2, "range-knob-pressed", null], [2, "range-knob-min", null], [2, "range-knob-max", null], [4, "left", null], [1, "aria-valuenow", 0], [1, "aria-valuemin", 0], [1, "aria-valuemax", 0], [1, "aria-disabled", 0], [1, "aria-labelledby", 0], [8, "tabIndex", 0]], [[null, "keydown"]], function (_v, en, $event) { var ad = true; if (("keydown" === en)) {
        var pd_0 = (i0.ɵnov(_v, 1)._keyup($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, View_RangeKnob_0, RenderType_RangeKnob)), i0.ɵdid(1, 49152, null, 0, i2.RangeKnob, [], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).pressed; var currVal_1 = ((i0.ɵnov(_v, 1).val === i0.ɵnov(_v, 1).min) || (i0.ɵnov(_v, 1).val === undefined)); var currVal_2 = (i0.ɵnov(_v, 1).val === i0.ɵnov(_v, 1).max); var currVal_3 = i0.ɵnov(_v, 1)._x; var currVal_4 = i0.ɵnov(_v, 1).val; var currVal_5 = i0.ɵnov(_v, 1).min; var currVal_6 = i0.ɵnov(_v, 1).max; var currVal_7 = i0.ɵnov(_v, 1).disabled; var currVal_8 = i0.ɵnov(_v, 1).labelId; var currVal_9 = (i0.ɵnov(_v, 1).disabled ? (0 - 1) : 0); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); }); }
var RangeKnobNgFactory = i0.ɵccf(".range-knob-handle", i2.RangeKnob, View_RangeKnob_Host_0, { ratio: "ratio", pressed: "pressed", pin: "pin", min: "min", max: "max", val: "val", disabled: "disabled", labelId: "labelId" }, { ionIncrease: "ionIncrease", ionDecrease: "ionDecrease" }, []);
export { RangeKnobNgFactory as RangeKnobNgFactory };
//# sourceMappingURL=range-knob.ngfactory.js.map